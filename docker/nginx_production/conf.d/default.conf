# This nginx configuration defines one server on port 80 and does not
# listen on port 443. SSL and port 443 are handled by the load balancer.
#
# Nginx proxies all requests to the application server which is expected to be
# running on port 5000/5001.
 gzip on;
    gzip_disable "msie6";
    gzip_http_version 1.1;
    gzip_comp_level 5; # or anything between 4-6
    gzip_min_length 100;
    gzip_proxied any;
    # We may need more mime-types here (eg. 'application/x-bibtex')
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/octet-stream
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-javascript
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        application/xml+rss
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/javascript
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy
        text/xml;
    gzip_vary on;

upstream ui_server {
  server web-ui:5000 fail_timeout=0;
}
upstream api_server {
  server web-api:5001 fail_timeout=0;
}


# HTTP server
server {
  listen 80; # IPv4
  listen [::]:80; # IPv6
  server_name _;

  # Request ID tracing (allows end-to-end tracking of requests for better
  # troubleshooting)
  add_header X-Request-ID $request_id;

  # The request body is sent to the proxied server immediately as it is
  # received
  proxy_request_buffering off;
  # Sets the HTTP protocol v1.1 for proxying in order to not use the buffer
  # in case of chunked transfer encoding
  proxy_http_version 1.1;

  # Proxying to the application server
  ## UI server
  location / {
    uwsgi_pass ui_server;
    include uwsgi_params;
    uwsgi_buffering off;
    uwsgi_request_buffering off;

    # Max upload size (except for files) is set to 100mb as default.
    client_max_body_size 100m;
  }
  ## Most API
  location /api {
    uwsgi_pass api_server;
    include uwsgi_params;
    uwsgi_buffering off;
    uwsgi_request_buffering off;

    # Max upload size (except for files) is set to 100mb as default.
    client_max_body_size 100m;
  }
  ## API files
  # Another location is defined in order to allow large file uploads in the files
  # API without exposing the other parts of the application to receive huge
  # request bodies.
  location ~ /api/records/.+/draft/files/.+/content {
    gzip off;
    uwsgi_pass api_server;
    include uwsgi_params;
    uwsgi_buffering off;
    uwsgi_request_buffering off;

    # Max upload size for files is set to 50GB (configure as needed).
    client_max_body_size 500G;
  }
  # Static content is served directly by nginx and not the application server.
  location /static {
    alias /opt/static_data;
    autoindex off;
  }
  # Robots.txt file is served by nginx.
  location /robots.txt {
    alias /opt/static_data/robots.txt;
    autoindex off;
  }

  location /healthcheck {
      return 200 'gangnam style!';
  }

}